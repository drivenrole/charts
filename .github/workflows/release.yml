#name: Release Charts
#
on:
  push:
    tags:
      - '**'

jobs:
  release:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.release.outputs.version }}
    container:
      image: quay.io/helmpack/chart-releaser:v1.2.1

    steps:
      - id: checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - id: update-chart-version
        run: |
          sed -i "s|version: 0.0.0+dev|version: ${GITHUB_REF##*/}|" chart/Chart.yaml

      - id: configure-git
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"

      - id: release
        env:
          CR_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
          CR_OWNER: drivenrole 
          CR_GIT_REPO: charts
          CR_PACKAGE_PATH: .deploy
          CR_CHARTS_REPO: https://drivenrole.github.io/charts
          CR_INDEX_PATH: index.yaml
          CR_RELEASE_NAME_TEMPLATE: "{{ .Version }}"
        run: |
          cr package chart
          cr upload
          cr index --push
          ARCHIVE=$(ls ${CR_PACKAGE_PATH})
          echo "::set-output name=version::${ARCHIVE%.*}"

  install:
    runs-on: ubuntu-latest
    needs: release
    steps:
      - uses: engineerd/setup-kind@v0.5.0
      - id: install
        env:
          CHARTS_REPO: https://drivenrole.github.io/charts 
        run: |
          helm repo add fusionauth ${CHARTS_REPO}
          helm install fusionauth drivenrole/fusionauth \
            --set database.host=host \
            --set database.user=user \
            --set database.password=password \
            --set search.host=host


      - id: verify-version
        env:
          RELEASED_VERSION: ${{ needs.release.outputs.version }}
        run: |
          INSTALLED_VERSION=$(helm list -m1 -f 'fusionauth*' -o json | jq -r '.[0].chart' )
          if [[ "${RELEASED_VERSION}" != "${INSTALLED_VERSION}" ]]; then
            echo "Incorrect Version Installed ..."
            echo "Released Version: $RELEASED_VERSION"
            echo "Installed Version: $INSTALLED_VERSION"
            exit 1
          else
            echo "Installed $INSTALLED_VERSION as expected."
          fi
